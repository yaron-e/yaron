<?xml version="1.0" encoding="UTF-8"?><testrun name="TwoNTileTest1" project="project1" tests="1" started="1" failures="1" errors="0" ignored="0">
  <testsuite name="TwoNTileTest1" time="0.003">
    <testcase name="addTileAtFreeSpace6" classname="TwoNTileTest1" time="0.003">
      <failure>java.lang.AssertionError: Tile at (0, 1) is wrong score
Expect Board:
   2    2 
   2    2 
   2    - 
   4    2 
   2    - 
Actual Board:
24
22
2-
-2
2-
Adding 4 at free space 1&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at TwoNTileTest1.checkBoard(TwoNTileTest1.java:73)&#13;
	at TwoNTileTest1.addTileAtFreeSpace6(TwoNTileTest1.java:32)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
</testrun>
